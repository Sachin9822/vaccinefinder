{"version":3,"sources":["App.js","index.js"],"names":["App","useState","vaccinedata","setvaccinedata","pincode","getpincode","date","getdate","useEffect","axios","get","then","res","data","centers","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","Container","className","HeaderContainer","Header","Input","type","placeholder","onChange","e","target","value","undefined","MainContainer","map","sessions","d1","ItemsContainer","name","min_age_limit","available_capacity_dose1","Redp","Greenp","come","keyframes","arrive","rotate","styled","div","h1","input","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAgEeA,MA3Df,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNC,EADM,KACOC,EADP,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGWJ,mBAAS,IAHpB,mBAGNK,EAHM,KAGAC,EAHA,KA2Bb,OAXAC,qBAAU,WACRC,IACGC,IADH,6FAGMN,GAAoB,EAH1B,iBAIaE,IAEVK,MAAK,SAACC,GAAD,OAAST,EAAeS,EAAIC,KAAKC,YAEzCP,EArBF,SAAoBD,GAClB,IAAIS,EAAI,IAAIC,KAAKV,GACfW,EAAQ,IAAMF,EAAEG,WAAa,GAC7BC,EAAM,GAAKJ,EAAEK,UACbC,EAAON,EAAEO,cAKX,OAHIL,EAAMM,OAAS,IAAGN,EAAQ,IAAMA,GAChCE,EAAII,OAAS,IAAGJ,EAAM,IAAMA,GAEzB,CAACA,EAAKF,EAAOI,GAAMG,KAAK,KAYvBC,CAAWT,WAClB,CAACZ,EAASE,IAEX,eAACoB,EAAD,CAAWC,UAAU,MAArB,UACE,eAACC,EAAD,WACE,cAACC,EAAD,6BACA,cAACC,EAAD,CACEC,KAAK,SACLC,YAAY,qBACZC,SAAU,SAACC,GAAD,OACRA,EAAEC,OAAOC,MAAMb,OAAS,EAAIlB,EAAW6B,EAAEC,OAAOC,YAASC,QAK/D,cAACC,EAAD,UACGpC,EAAYqC,KAAI,SAACxB,GAAD,OACfA,EAAEyB,SAASD,KAAI,SAACE,GAAD,OACb,eAACC,EAAD,WACE,+BAAOD,EAAGnC,OACV,6BAAKS,EAAE4B,OAFT,IAEoB,8BAAIF,EAAGG,cAAP,OACe,IAAhCH,EAAGI,yBACF,cAACC,EAAD,UAAOL,EAAGI,2BAEV,eAACE,EAAD,yBAAoBN,EAAGI,yBAAvB,sBAYVG,EAAOC,YAAH,oKAUJC,EAASD,YAAH,+GASNE,EAASF,YAAH,0FASNvB,EAAY0B,IAAOC,IAAV,iIAMTzB,EAAkBwB,IAAOC,IAAV,iTAiBfxB,EAASuB,IAAOE,GAAV,6GAIGH,GAETrB,EAAQsB,IAAOG,MAAV,kLAMIL,GAMTJ,EAAOM,IAAOI,EAAV,2CAIJT,EAASK,IAAOI,EAAV,+CAINd,EAAiBU,IAAOC,IAAV,sdAELL,GAwBTV,EAAgBc,IAAOC,IAAV,oPCpKnBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e22c1755.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport \"./App.css\";\n\nfunction App() {\n  const [vaccinedata, setvaccinedata] = useState([]);\n  const [pincode, getpincode] = useState(\"\");\n  const [date, getdate] = useState(\"\");\n  function formatDate(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [day, month, year].join(\"-\");\n  }\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${\n          pincode ? pincode : 0\n        }&date=${date}`\n      )\n      .then((res) => setvaccinedata(res.data.centers));\n\n    getdate(formatDate(Date()));\n  }, [pincode, date]);\n  return (\n    <Container className=\"App\">\n      <HeaderContainer>\n        <Header>Vaccine Finder</Header>\n        <Input\n          type=\"number\"\n          placeholder=\"Enter your pincode\"\n          onChange={(e) =>\n            e.target.value.length > 5 ? getpincode(e.target.value) : undefined\n          }\n        ></Input>\n      </HeaderContainer>\n\n      <MainContainer>\n        {vaccinedata.map((d) =>\n          d.sessions.map((d1) => (\n            <ItemsContainer>\n              <span>{d1.date}</span>\n              <h3>{d.name}</h3> <p>{d1.min_age_limit}+</p>\n              {d1.available_capacity_dose1 === 0 ? (\n                <Redp>{d1.available_capacity_dose1}</Redp>\n              ) : (\n                <Greenp>available: {d1.available_capacity_dose1} </Greenp>\n              )}\n            </ItemsContainer>\n          ))\n        )}\n      </MainContainer>\n    </Container>\n  );\n}\n\nexport default App;\n\nconst come = keyframes`\n  from {\n    transform: translate(-1000px,-1000px);\n    /* margin-right: 100px; */\n  }\n  to {\n    transform: translate(0,0);\n  }\n`;\n\nconst arrive = keyframes`\nfrom {\n  transform: translate(0,-100px);\n}\nto {\ntransform: translate(0,0);\n}\n`;\n\nconst rotate = keyframes`\n from {\n   transform: translate(100px);\n }\n to {\n   \n }\n`;\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst HeaderContainer = styled.div`\n  top: 0;\n  left: 3px;\n  display: flex;\n  flex-direction: column;\n  left: auto;\n  right: auto;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #111111;\n  z-index: 1;\n  padding: 20px;\n  height: 100px;\n  position: fixed;\n`;\n\nconst Header = styled.h1`\n  color: white;\n  padding: 20px;\n  margin-right: auto;\n  animation: ${rotate} 1s 1;\n`;\nconst Input = styled.input`\n  position: relative;\n  top: 0;\n  z-index: 1;\n  border-radius: 10px;\n  padding: 5px;\n  animation: ${arrive} 1s 1;\n  margin: auto;\n\n  outline: none;\n`;\n\nconst Redp = styled.p`\n  color: red;\n`;\n\nconst Greenp = styled.p`\n  color: #06c906;\n`;\n\nconst ItemsContainer = styled.div`\n  position: relative;\n  animation: ${come} 0.5s 1;\n  background-color: #1a1a1a;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  float: left;\n  justify-content: center;\n  align-items: center;\n  margin: 20px;\n  padding: 10px;\n  width: 158px;\n  cursor: pointer;\n  height: 200px;\n  border-radius: 10px;\n  transition-duration: 0.7s;\n\n  &:hover {\n    transform: scale(1.3);\n  }\n  &span {\n    margin-bottom: 10px;\n  }\n`;\n\nconst MainContainer = styled.div`\n  float: left;\n  justify-content: center;\n  background-color: black;\n  margin-top: 160px;\n  height: 100%;\n  min-height: 100vh;\n  min-width: 200px;\n  max-width: 100%;\n  align-items: center;\n  padding: 20px;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}